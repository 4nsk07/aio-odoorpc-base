#! /usr/bin/env python3

from typing import List, Tuple
import os

files = [('aio_odoorpc_base/aio_jsonrpc.py', 'aio_odoorpc_base/jsonrpc.py')]

delete_lines = ['from inspect import isawaitable',
                'if isawaitable(data):',
                'data = await data']

comment_lines = []

repl = [('T_AsyncResponse', 'T_Response'),
        ('T_AsyncHttpClient', 'T_HttpClient'),
        ('async def', 'def'),
        ('await ', ''),
        ('aio_', ''),
        ('odoorpc_base', 'aio_odoorpc_base')]


def convert_async_to_sync(filename_async: str, filename_sync: str, repl: List[Tuple], delete_lines: List[str]):
    dt_mod_async = os.path.getmtime(filename_async)
    dt_mod_script = os.path.getmtime(__file__)
    try:
        dt_mod_sync = os.path.getmtime(filename_sync)
    except:
        dt_mod_sync = 0
    
    if dt_mod_async < dt_mod_sync and dt_mod_script < dt_mod_sync:
        return
    
    lines = []
    with open(filename_async, 'r') as file:
        for line in file:
            line_s = line.strip()
            keep = True
            for t in delete_lines:
                if t == line_s:
                    print(f'Deleted line: {t}')
                    keep = False
                    break
            if keep:
                lines.append(line)
    
    f_async = ''.join(lines)
    f_sync = f_async

    for t in repl:
        index = f_sync.find(t[0])
        if index >= 0:
            f_sync = f_sync.replace(t[0], t[1])
        else:
            print(f'No match for rule: {t[0]} -> {t[1]}')

    with open(filename_sync, 'w') as f:
        f.write(f_sync)

    os.system(f'autopep8 -i {filename_sync}')


for f in files:
    convert_async_to_sync(f[0], f[1], repl, delete_lines)
