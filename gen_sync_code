#! /usr/bin/env python3

from typing import List, Tuple
import os

files = [('aio_odoorpc_base/aio_jsonrpc.py', 'aio_odoorpc_base/jsonrpc.py')]

repl = [('await resp.json() if iscoroutine(resp.json) else ', ''),
        ('from asyncio import iscoroutine', '# from asyncio import iscoroutine'),
        ('import ProtoAsyncHttpClient, ProtoAsyncResponse, ', 'import ProtoHttpClient, '),
        ('ProtoResponse or ProtoAsyncResponse', 'ProtoResponse'),
        ('async def', 'def'),
        ('await ', ''),
        ('async with ', 'with '),
        ('AsyncHttpClient', 'HttpClient'),
        ('aio_', ''),
        ('odoorpc_base', 'aio_odoorpc_base')]


def convert_async_to_sync(filename_async: str, filename_sync: str, repl: List[Tuple]):
    dt_mod_async = os.path.getmtime(filename_async)
    try:
        dt_mod_sync = os.path.getmtime(filename_sync)
    except:
        dt_mod_sync = 0
    
    if dt_mod_async < dt_mod_sync:
        return
    
    with open(filename_async, 'r') as f:
        f_async = f.read()
    
    f_sync = f_async

    for t in repl:
        f_sync = f_sync.replace(t[0], t[1])

    with open(filename_sync, 'w') as f:
        f.write(f_sync)

    os.system(f'autopep8 -i {filename_sync}')


for f in files:
    convert_async_to_sync(f[0], f[1], repl)
